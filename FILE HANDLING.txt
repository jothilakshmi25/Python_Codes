FILE HANDLING

1.What is file handling?
        File handling in Python is simplified with built-in methods, which include creating, opening, and closing files. While files are open, Python additionally allows performing various file operations, such as reading, writing, and appending information.

2.Can you explain the different modes of opening a file?
        The different modes of opening a file are 'r','w' and 'a' whereas r is to read the file, w is to write on the file and a is used to append on the file.

3.How do you create a text file?
         To create a text file, we have to open the text file with the file name and with the mode of w or x.

4.How do you read and write to an existing file?
          To read and write on the existing file, we have to open the file with 'r+' mode.By this mode, we can read and write the existing file multiple times as per our requirements.

5.What are the some important methods used for reading from a file?
          Some important methods used for reading from a file:
    i)read() : This function reads the entire file and returns a string.
    ii)readline() : This function reads lines from that file and returns         as a string.
    iii)readlines() : This function returns a list where each element is single line of that file.

6.What are the some common errors that can occur while working with files?
           1.Indentation error
           2.saving the filename as simliar to module name
           3.if you have written the wrong spelling of the filename, or the file does not exist.         

7.What is the difference between binary and text files?
        A text file consists of human readable characters, which can be opened by any text editor. On the other hand, binary files are made up of non-human readable characters and symbols, which require specific programs to access its contents.

8.which function allow us to check if we have reached the end of a file?
        EOF is the function allow us to check if we have reached the end of a file.

9.List down the steps involved in processing a large file?
         The steps takes place in the following order:
                   i) Open a file
                  ii) Read or Write
                 iii) Append
                  iV) Close the file

10.What is the difference between write and append mode?
           In write mode, all the content which was previously present in the file will be overwritten due to the file pointer having it's position at the beginning of the file. Whereas in append mode, the file pointer will be at the end of the file and any existing data won't be overwritten.

11.What is the differnce between read() and read(n) functions?
           The read() function reads the entire file and returns the string whereas the read(n) function read only a specific number of bytes from the file by passing the parameter 'n'.

12.Differentiate between Absolute Pathnames and Relative Pathnames?
          A relative path describes the location of a file relative to the current working directory. An absolute path describes the location from the root directory.

13.Differentiate between file modes 'r+' and 'w+' with respect to Python?
          The 'r+' mode used to read and write on the existing file multiple times. The 'W+' mode is also used to read and write on the existing file but once the file is opened on 'w+' mode the content will be removed automatically which are exist and also used to create a new file as well. 

14.What is file mode? Name the default file mode?
          A file can be opened in one of four modes. The mode determines where the file is positioned when opened, and what functions are allowed.
The default file mode is read mode.
      






